{"version":3,"sources":["components/Form/Form.js","components/Form/DefaultForm.js","components/Form/IcognitoForm.js","components/Ouvidoria.js","App.js","serviceWorker.js","index.js"],"names":["Form","event","preventDefault","form","target","fetch","action","method","body","FormData","then","response","text","console","log","React","Component","DefaultForm","_this","this","react_default","a","createElement","props","apiUri","className","onSubmit","sendForm","type","placeholder","name","value","IcognitoForm","Ouvidoria","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","icognitoMode","data-targets","onClick","toggle","bind","IcognitoForm_IcognitoForm","DefaultForm_DefaultForm","document","classList","setState","App","id","Ouvidoria_Ouvidoria","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50e91057.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Form extends React.Component {\n  sendForm(event) {\n    event.preventDefault();\n    const form = event.target;\n    fetch(form.action, {\n      method: \"POST\",\n      body: new FormData(form)\n    })\n      .then(response => response.text())\n      .then(text => console.log(text));\n  }\n}\n","import React from \"react\";\nimport Form from \"./Form\";\n\nexport default class DefaultForm extends Form {\n  render() {\n    return (\n      <form\n        action={this.props.apiUri}\n        method=\"POST\"\n        className=\"form active\"\n        onSubmit={event => this.sendForm(event)}\n      >\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Nome\"\n            name=\"name\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <select className=\"form-control\" name=\"semester\">\n            <option value=\"\">Semestre</option>\n            <option value=\"1\">1º Semestre</option>\n            <option value=\"2\">2º Semestre</option>\n            <option value=\"3\">3º Semestre</option>\n            <option value=\"4\">4º Semestre</option>\n            <option value=\"5\">5º Semestre</option>\n            <option value=\"6\">6º Semestre</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            className=\"form-control\"\n            placeholder=\"Sugestão...\"\n            name=\"suggestion\"\n          />\n        </div>\n        <input type=\"submit\" className=\"btn w-100\" />\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport Form from \"./Form\";\n\nexport default class IcognitoForm extends Form {\n  render() {\n    return (\n      <form\n        action={this.props.apiUri}\n        className=\"form\"\n        onSubmit={this.sendForm}\n      >\n        <div className=\"form-group\">\n          <textarea className=\"form-control\" placeholder=\"Sugestão...\" />\n        </div>\n        <input type=\"submit\" className=\"btn w-100\" />\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Ouvidoria.css\";\nimport DefaultForm from \"./Form/DefaultForm\";\nimport IcognitoForm from \"./Form/IcognitoForm\";\n\nexport default class Ouvidoria extends Component {\n  constructor() {\n    super();\n    this.state = {\n      apiUri: \"http://localhost/opennet-api/\",\n      icognitoMode: false\n    };\n  }\n  render() {\n    return (\n      <div className=\"form-container w-100\">\n        <div className=\"d-flex align-items-center\">\n          <div>\n            <h1>Ouvidoria OpenNet</h1>\n            <p>Deixe sua sugestão, contribua para um curso melhor.</p>\n          </div>\n        </div>\n        <div>\n          <button\n            className=\"btn btnSwitchMode\"\n            data-targets=\"form\"\n            onClick={this.toggle.bind(this)}\n          >\n            Sugestão anônima\n          </button>\n          <div className=\"forms-container py-3\">\n            {!this.state.icognitoMode ? (\n              <DefaultForm apiUri={this.state.apiUri} />\n            ) : (\n              <IcognitoForm apiUri={this.state.apiUri} />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  toggle() {\n    document.body.classList.toggle(\"icognito-mode\");\n    this.setState({ icognitoMode: !this.state.icognitoMode });\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Ouvidoria from \"./components/Ouvidoria\";\n\nfunction App() {\n  return (\n    <div\n      id=\"app\"\n      className=\"containe-fluid p-3 min-vh-100 d-flex align-items-center justify-content-center\"\n    >\n      <Ouvidoria />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}